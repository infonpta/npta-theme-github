{% schema %}
{
  "name": "Form Builder Text NP",
  "settings": [
              {
      "type": "text",
      "id": "section_id",
      "label": "Section ID",
      "default": "certified-trainers"
    },
        {
      "type": "color",
      "id": "background_color",
      "label": "Background Color",
      "default": "#ffffff"
    },
        {
      "type": "range",
      "id": "top_padding",
      "label": "Top padding",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "default": 92
    },
    {
      "type": "range",
      "id": "bottom_padding",
      "label": "Bottom padding",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "default": 92
    },
     {
      "type": "text",
      "id": "section_title",
      "label": "Section Title",
      "default": "Lorem ipsum dolor sit amet"
    },
        {
      "type": "text",
      "id": "section_sub_title",
      "label": "Sub Title",
      "default": "Lorem ipsum"
    },

    {
      "type": "richtext",
      "id": "section_description",
      "label": "Section Description",
      "default": "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>"
    },
    {
      "type": "select",
      "id": "title_alignment",
      "label": "Title Alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "left"
    },
    {
      "type": "range",
      "id": "container_width",
      "label": "Container width",
      "min": 200,
      "max": 2000,
      "step": 20,
      "unit": "px",
      "default": 980
    },
    {
      "type": "select",
      "id": "alignment",
      "label": "Alignment",
      "options": [
        {
          "value": "flex-start",
          "label": "Flex Start"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "flex-end",
          "label": "Flex End"
        }
      ],
      "default": "center"
    },
     {
      "type": "checkbox",
      "id": "show_program_button",
      "label": "Display Program Button",
      "default": true
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button Text",
      "default": "Button"
    },
    {
      "type": "url",
      "id": "program_button_link",
      "label": "Button Link",
      "default": "/"
    },
        {
      "type": "richtext",
      "id": "section_footer_description",
      "label": "Section Footer Description",
      "default": "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>"
    },
      {
      "type": "range",
      "id": "form_width",
      "label": "Form width",
      "min": 200,
      "max": 2000,
      "step": 20,
      "unit": "px",
      "default": 980
    },
       {
      "type": "richtext",
      "id": "thank_you_message",
      "label": "Thank You Message",
      "default": "<p>Thank you for your submission!</p>"
    },
    {
      "type": "select",
      "id": "form_action",
      "label": "Form Action",
      "options": [
        {
          "value": "webhook",
          "label": "Send to Webhook"
        },
        {
          "value": "/contact",
          "label": "Contact Form"
        }
      ],
      "default": "webhook"
    },
    {
      "type": "text",
      "id": "webhook_url",
      "label": "Webhook URL",
      "default": "/",
      "info": "Enter your Zapier Webhook URL for integration",
  
    },
        {
      "type": "text",
      "id": "form_submit_label",
      "label": "Form Button Label",
      "default": "Sign Up Now",

  
    }
  ],
 "blocks": [
    {
      "type": "text_field",
      "name": "Text Field",
      "settings": [
        {
          "type": "text",
          "id": "label",
          "label": "Field Label",
          "default": "Name"
        },
        {
          "type": "text",
          "id": "placeholder",
          "label": "Placeholder",
          "default": "Enter your name"
        }
      ]
    },
    {
      "type": "textarea",
      "name": "Textarea",
      "settings": [
        {
          "type": "text",
          "id": "label",
          "label": "Field Label",
          "default": "Message"
        },
        {
          "type": "text",
          "id": "placeholder",
          "label": "Placeholder",
          "default": "Enter your message"
        }
      ]
    },
    {
      "type": "select",
      "name": "Dropdown",
      "settings": [
        {
          "type": "text",
          "id": "label",
          "label": "Field Label",
          "default": "Options"
        },
        {
          "type": "text",
          "id": "options",
          "label": "Options (comma separated)",
          "default": "Option 1, Option 2, Option 3"
        }
      ]
    },
    {
      "type": "email",
      "name": "Email Field",
      "settings": [
        {
          "type": "text",
          "id": "label",
          "label": "Field Label",
          "default": "Email"
        },
        {
          "type": "text",
          "id": "placeholder",
          "label": "Placeholder",
          "default": "Enter your email"
        }
      ]
    },
    {
      "type": "phone",
      "name": "Phone Field",
      "settings": [
        {
          "type": "text",
          "id": "label",
          "label": "Field Label",
          "default": "Phone Number"
        },
        {
          "type": "text",
          "id": "placeholder",
          "label": "Placeholder",
          "default": "Enter your phone number"
        }
      ]
    },
    {
      "type": "checkbox",
      "name": "Checkbox",
      "settings": [
        {
          "type": "text",
          "id": "label",
          "label": "Field Label",
          "default": "Agree to Terms"
        },
        {
          "type": "text",
          "id": "description",
          "label": "Description",
          "default": "I agree to the terms and conditions."
        }
      ]
    },



  ],
  "presets": [
    {
      "name": "Form Builder Text NP",
      "category": "Custom"
    }
  ]
}
{% endschema %}
<div class="section--full-custom-form" style="padding-top: {{ section.settings.top_padding }}px; padding-bottom: {{ section.settings.bottom_padding }}px; background-color: {{ section.settings.background_color }};" id="{{ section.settings.section_id }}">

  <div class="section--title-block page-container" style="display: flex; justify-content: {{ section.settings.alignment }};">
    <div style="max-width: {{ section.settings.container_width }}px;">
      <p style="text-align: {{ section.settings.title_alignment }};" class="section--sub-title">
        <span>{{ section.settings.section_sub_title }}</span>
      </p>
      <h1 style="text-align: {{ section.settings.title_alignment }};">{{ section.settings.section_title }}</h1>
      <div class="title-block--desc" style="text-align: {{ section.settings.title_alignment }};">{{ section.settings.section_description }}</div>
    </div>
  </div>
 <form id="custom-form" method="POST" action="{{ section.settings.webhook_url }}" enctype="application/x-www-form-urlencoded" style="max-width: {{ section.settings.form_width }}px;">
    {% assign row_open = false %}
    {% assign column_count = 0 %}

    {% for block in section.blocks %}
      {% assign is_required = true %} <!-- Assuming all fields are required -->

      {% if block.type == 'textarea' %}
        {% if row_open %}
          </div>
          {% assign row_open = false %}
        {% endif %}
        <div class="form-row">
          <div class="form-column full-width">
            <label>{{ block.settings.label }}{% if is_required %}*{% endif %}</label>
            <textarea placeholder="{{ block.settings.placeholder }}" name="{{ block.settings.label | handleize }}" required></textarea>
          </div>
        </div>
      {% elsif block.type == 'checkbox' %}
        {% if row_open %}
          </div>
          {% assign row_open = false %}
        {% endif %}
        <div class="form-row">
          <div class="form-column full-width">
            <div class="form-consent">
              <input type="checkbox" name="{{ block.settings.label | handleize }}" required>
              <p>{{ block.settings.description }}</p>
            </div>
          </div>
        </div>
      {% else %}
        {% if column_count == 0 %}
          {% if row_open %}
            </div>
          {% endif %}
          <div class="form-row">
          {% assign row_open = true %}
        {% endif %}
        <div class="form-column half-width">
          <label>{{ block.settings.label }}{% if is_required %}*{% endif %}</label>
          {% case block.type %}
            {% when 'text_field' %}
              <input type="text" placeholder="{{ block.settings.placeholder }}" name="{{ block.settings.label | handleize }}" required>
            {% when 'email' %}
              <input type="email" placeholder="{{ block.settings.placeholder }}" name="{{ block.settings.label | handleize }}" required>
            {% when 'phone' %}
              <input type="tel" placeholder="{{ block.settings.placeholder }}" name="{{ block.settings.label | handleize }}" required>
            {% when 'select' %}
              <select name="{{ block.settings.label | handleize }}" required>
                <option value="" disabled selected>Select Option</option>
                {% assign options = block.settings.options | split: ', ' %}
                {% for option in options %}
                  <option value="{{ option | handleize }}">{{ option }}</option>
                {% endfor %}
              </select>
          {% endcase %}
        </div>
        {% assign column_count = column_count | plus: 1 %}
        
        {% if column_count == 2 or forloop.last %}
          </div>
          {% assign row_open = false %}
          {% assign column_count = 0 %}
        {% endif %}
      {% endif %}
    {% endfor %}


     <input type="hidden" name="recaptcha_token" id="recaptcha_token">

<input type="text" name="honeypot" class="honeypot" style="display:none;" autocomplete="off">

   
    <button type="submit" class="form-button btn button-yg" name="commit" aria-label="Submit">
      <span class="btn-label-down">{{ section.settings.form_submit_label }}</span>
      <span class="btn-label-down">{{ section.settings.form_submit_label }}</span>
    </button>
  </form>
  
  <!-- Success Popup Modal -->

  {% if section.settings.show_program_button %}
    <div class="container--footer" style="display: flex; flex-wrap: wrap; justify-content: {{ section.settings.alignment }};"> 
      <div class="button-wrap" style="display: flex; justify-content: {{ section.settings.alignment }};">
        <a href="{{ section.settings.program_button_link }}" class="btn button-yg">
          <span class="btn-label-down">{{ section.settings.form_submit_label }}</span>
          <span class="btn-label-down">{{ section.settings.form_submit_label }}</span>
        </a>
      </div>
      <div class="section-footer-description" style="text-align: {{ section.settings.title_alignment }};">
        {{ section.settings.section_footer_description }}
      </div>
    </div>
  {% endif %}
</div>



    


<script src="https://www.google.com/recaptcha/api.js?render=6Lf762AqAAAAALFi5cjMR1pDOlO3FhZx9vGGqFjJ&badge=bottomleft"></script>
<script>
  function executeRecaptcha(action) {
    return new Promise((resolve) => {
      grecaptcha.ready(function() {
        grecaptcha.execute('6Lf762AqAAAAALFi5cjMR1pDOlO3FhZx9vGGqFjJ', { action: action }).then(function(token) {
          resolve(token);
        });
      });
    });
  }

  function validateEmail(email) {
    const re = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6}$/;
    return re.test(email);
  }

  function validatePhone(phone) {
    const re = /^[0-9]+$/; // Adjust regex if needed for specific formats
    return re.test(phone);
  }

  function validateText(input) {
    return input.trim() !== "";
  }


  function showError(input, message) {
    const error = document.createElement('div');
    error.className = 'error-message';
    error.textContent = message;
    input.classList.add('error');
    input.parentNode.insertBefore(error, input.nextSibling);
  }

  document.addEventListener('DOMContentLoaded', function() {
    var form = document.getElementById('custom-form');

    if (form) {
      form.addEventListener('submit', async function(event) {
        event.preventDefault(); // Prevent default submission

        var isValid = true;

         
      var honeypotInput = form.querySelector("input[name='honeypot']");
      if (honeypotInput && honeypotInput.value) {
        console.log("Honeypot field filled, possible bot submission.");
        return; 
      }

        // Clear previous errors
        form.querySelectorAll('.error-message').forEach(elem => elem.remove());
        form.querySelectorAll('.error').forEach(elem => elem.classList.remove('error'));

   // Validate text input
      var textInput = form.querySelector("input[type='text']");
      if (textInput && !validateText(textInput.value)) {
        showError(textInput, "This field cannot be empty.");
        isValid = false;
      }

        // Validate email
        var emailInput = form.querySelector("input[type='email']");
        if (emailInput && !validateEmail(emailInput.value)) {
          showError(emailInput, "Please enter a valid email address.");
          isValid = false;
        }

        // Validate phone
        var phoneInput = form.querySelector("input[type='tel']");
        if (phoneInput && !validatePhone(phoneInput.value)) {
          showError(phoneInput, "Please enter a valid phone number.");
          isValid = false;
        }

        // Validate select input
        var selectInput = form.querySelector("select");
        if (selectInput && !selectInput.value) {
          showError(selectInput, "Please select an option.");
          isValid = false;
        }

        // Validate checkbox
        var checkboxInput = form.querySelector("input[type='checkbox']");
        if (checkboxInput && !checkboxInput.checked) {
          showError(checkboxInput, "Please accept the terms.");
          isValid = false;
        }

        // Validate textarea
        var textareaInput = form.querySelector("textarea");
        if (textareaInput && !validateText(textareaInput.value)) {
          showError(textareaInput, "This field cannot be empty.");
          isValid = false;
        }

        // If validation fails, stop form submission
        if (!isValid) {
          return;
        }

        try {
          // Execute reCAPTCHA and get the token
          const token = await executeRecaptcha('submit_form');
          
          // Add the token to the form data
          var formData = new FormData(form);
          formData.append('recaptcha_token', token); // Append token to FormData

          // Send the form data with fetch
          const response = await fetch(form.action, {
            method: 'POST',
            body: formData
          });

          if (response.ok) {
            // Redirect upon success
            window.location.href = '/pages/thank-you';
          } else {
            // Handle error response
            const errorText = await response.text();
            console.error('Submission error:', errorText);
            alert('There was an error submitting the form. Please try again.');
          }
        } catch (error) {
          console.error('Network error:', error);
          alert('There was a network error. Please try again.');
        }
      });
    }
  });
</script>




<style>
.section--sub-title span{
  color:#141414;
text-align: center;
    font-family: var(--font-heading-family) !important;
font-size: 18px !important;
font-style: normal;
font-weight: 800 !important;
line-height: 104%; /* 18.72px */
text-transform: uppercase;
}

.section--full-custom-form {
  display: flex;
  padding: 40px 24px;
  flex-direction: column;
  align-items: center;
  gap: 24px;
  border-radius: 20px;
  background: #f7f8fa;
  min-height: 300px;
}

@media only screen and (max-width: 600px) {
  form .form-row {
    flex-wrap: wrap;
  }
}

.form-button {
  border: none;
  width: 100%;
}
.section--full-custom-form {
  display: flex;
  padding: 40px 24px;
  flex-direction: column;
  align-items: center;
  padding: 40px 24px;
  border-radius: 20px;
  background: #f7f8fa;
}
form {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  gap: 20px;
}

form .form-row {
  display: flex;
  justify-content: center;
  gap: 15px;
  width: 100%;
}
.form-row .form-column {
  display: flex;
  flex-wrap: Wrap;
  justify-content: flex-start;
  width: 100%;
}
.form-row .form-column label {
  width: 100%;
  color: var(--black, #141414);
      font-family: var(--font-heading-family);
  font-size: 16px;
  font-style: normal;
  font-weight: 700;
  line-height: 150%; /* 24px */
  letter-spacing: 1.28px;
  text-transform: uppercase;
  margin-bottom:10px;
}

.form-row .form-column input {
  display: flex;

  padding: 15px;
  align-items: center;
  gap: 10px;
  border-radius: 6px;
  border: 1px solid #d0d0d0;
  background: #fff;
}

.form-row .form-column input {
  color: #141414;
  font-family: var(--font-body-family);
  font-size: 16px;
  font-style: normal;
  font-weight: 400;
  line-height: 150%;
  transition: 300ms;
  width: 100%;
}

.form-row .form-column input:focus,
.form-row .form-column input:hover {
  border-radius: 6px;
  border: 1px solid #141414;
  background: #fff;
  transition: 300ms;
  color: #141414;
}

.form-row .form-column textarea {
  width: 100%;
  color: #141414;
  font-family: var(--font-body-family);
  font-size: 16px;
  font-style: normal;
  font-weight: 400;
  line-height: 150%;
  transition: 300ms;
  border-radius: 6px;
  border: 1px solid #d0d0d0;
  min-height: 120px;
  padding: 15px;
}

.form-row .form-column textarea:focus,
.form-row .form-column textarea:hover {
  border-radius: 6px;
  border: 1px solid #141414;
  background: #fff;
  transition: 300ms;
  color: #141414;
  outline: none;
}


    .form-row .form-column select {
  color: #141414;
  font-family: var(--font-body-family);
  font-size: 16px;
  font-style: normal;
  font-weight: 400;
  line-height: 150%;
  transition: 300ms;
  width: 100%;
}
  
.form-row .form-column select {
  display: flex;

  padding: 15px;
  align-items: center;
  gap: 10px;
  border-radius: 6px;
  border: 1px solid #d0d0d0;
  background: #fff;
}

.form-row .form-column select {
background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='28' height='28' fill='none'%3E%3Cpath d='M19.793 11.104 14 16.896l-5.793-5.793' stroke='%23141414' stroke-opacity='.6' stroke-width='2' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E");} 



  
.form-row .form-column select {
    background-repeat:no-repeat;
  background-position:97% center;

background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='28' height='28' fill='none'%3E%3Cpath d='M19.793 11.104 14 16.896l-5.793-5.793' stroke='%23141414' stroke-opacity='.6' stroke-width='2' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E");    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;

}

  
*:focus-visible {
  outline: none !important;
  outline-offset: none !important;
  box-shadow: none !important;
}
@media only screen and (min-width: 601px) {
    .form-column {
    flex: 1;

  }
}

  .form-column.full-width {
    flex: 1 0 100%;
    margin-right: 0;
  }

  .form-consent {
        display: grid;
    grid-template-columns: 18px auto;
    gap: 15px;
  }
    .form-consent p{
    color: #141414;

    font-family: var(--font-body-family);
font-size: 16px;
font-style: normal;
font-weight: 400;
line-height: 150%; /* 24px */
  }




.success-popup {
  position: fixed;
  z-index: 1000;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
}

.success-popup-content {
  background-color: #fff;
  padding: 90px 20px;
  border-radius: 8px;
  text-align: center;
  max-width: 1080px;
  width: 90%;
  position: relative;
}

.close-popup {
  position: absolute;
  top: 30px;
  right: 30px;

  cursor: pointer;
}
.close-popup {
  position: absolute;

  cursor: pointer;
  display: flex;
  align-items: center;
}

.close-popup svg {
  width: 15px;
  height: 15px;
}

.success-popup h2 {
  color: #141414;
  text-align: center;
    font-family: var(--font-heading-family);
  font-size: 42px;
  font-style: normal;
  font-weight: 800;
  line-height: 112%; /* 47.04px */
  text-transform: uppercase;
  margin-top:5px;
  margin-bottom:7px;
}

.success-popup .success-popup-desc {
  color: #141414;
  text-align: center;
font-family: var(--font-body-family);
  font-size: 20px;
  font-style: normal;
  font-weight: 400;
  line-height: 150%;
}
.success-popup h3 {
  color: #141414;
  text-align: center;
    font-family: var(--font-heading-family);
  font-size: 18px;
  font-style: normal;
  font-weight: 800;
  line-height: 104%;
  text-transform: uppercase;
}
.success-popup .success-popup-steps-desc {
  color: #141414;
  text-align: center;
font-family: var(--font-body-family);
  font-size: 18px;
  font-style: normal;
  font-weight: 400;
  line-height: 150%;
}
.success-popup .success-popup-steps-desc a {
  color: #133257;
  text-align: center;
 font-family: var(--font-body-family);
  font-size: 18px;
  font-style: normal;
  font-weight: 400;
  line-height: 150%;
  text-decoration: none;
}
.popup-social-wrap {
  display: flex;
  justify-content: center;
  align-items: center;
}
.popup-social-wrap a {
  color: #133257;
    font-family: var(--font-heading-family);
  font-size: 14px;
  font-style: normal;
  font-weight: 700;
  line-height: 150%;
  letter-spacing: 1.12px;
  text-transform: uppercase;
  text-decoration: none;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 10px;
}

  
</style>
