{{ 'video-section.css' | asset_url | stylesheet_tag }}
{{ 'component-deferred-media.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

{%- liquid
  assign video_id = section.settings.video.id | default: section.settings.video_url.id
  assign video_alt = section.settings.video.alt | default: section.settings.description
  assign alt = 'sections.video.load_video' | t: description: video_alt | escape
  assign poster = section.settings.video.preview_image | default: section.settings.cover_image

  if section.settings.video != null
    assign ratio_diff = section.settings.video.aspect_ratio | minus: poster.aspect_ratio | abs
    if ratio_diff < 0.01 and ratio_diff > 0
      assign fix_ratio = true
    endif
  endif
-%}

{%- capture sizes -%}
  {% if section.settings.full_width -%}
    100vw
  {%- else -%}
    (min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 100 }}px, (min-width: 750px)
    calc(100vw - 10rem), 100vw
  {%- endif %}
{%- endcapture -%}






<section class="section--text-video">
    <div class="text-video--container page-container">
        <div class="text-video--content">
            <div class="text-video--column-left">
                <div class="section--title-block">
                    <h2 class="is--flex-start">{{ section.settings.heading }}</h2> 
                </div>

                <div class="text-video--description">
                    {{ section.settings.short_description }}
                </div>
             
                <div class="section--hero-buttons">
                    {% if section.settings.primary_button_text and section.settings.primary_button_link %}
                        <a href="{{ section.settings.primary_button_link }}" class="btn button-yg">
                            <span class="btn-label-down">{{ section.settings.primary_button_text }}</span>
                            <span class="btn-label-down">{{ section.settings.primary_button_text }}</span>
                        </a>
                    {% endif %}

                    {% if section.settings.secondary_button_text and section.settings.secondary_button_link %}
                        <a href="{{ section.settings.secondary_button_link }}" class="btn button-b">
                            <span class="btn-label-down">{{ section.settings.secondary_button_text }}</span>
                            <span class="btn-label-down">{{ section.settings.secondary_button_text }}</span>
                        </a>
                    {% endif %}
                </div>
            </div>
            <div class="text-video--column-right">




                <deferred-media
      class="video-section__media deferred-media gradient global-media-settings{% if section.settings.full_width %} global-media-settings--full-width{% endif %}{% if fix_ratio %} media-fit-cover{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
      data-media-id="{{ video_id }}"
      {% if poster != null %}
        style="--ratio-percent: {{ 1 | divided_by: poster.aspect_ratio | times: 100 }}%;"
      {% endif %}
    >
      <button
        id="Deferred-Poster-Modal-{{ video_id }}"
        class="video-section__poster media deferred-media__poster media--landscape"
        type="button"
        aria-label="{{ alt }}"
      >
        {%- if poster != null -%}
          {{
            poster
            | image_url: width: 3840
            | image_tag: sizes: sizes, widths: '375, 750, 1100, 1500, 1780, 2000, 3000, 3840', alt: alt
          }}
        {%- else -%}
          {{ 'hero-apparel-3' | placeholder_svg_tag: 'placeholder-svg placeholder' }}
        {%- endif -%}
        <span class="deferred-media__poster-button motion-reduce">
          {%- render 'icon-play' -%}
        </span>
      </button>
      <template>
        {%- if section.settings.video == null and section.settings.video_url != null -%}
          {%- liquid
            assign loop = ''
            if section.settings.enable_video_looping
              assign loop = '&loop=1&playlist=' | append: video_id
            endif
          -%}
          {%- if section.settings.video_url.type == 'youtube' -%}
            <iframe
              src="https://www.youtube.com/embed/{{ video_id }}?enablejsapi=1&autoplay=1{{ loop }}"
              class="js-youtube"
              allow="autoplay; encrypted-media"
              allowfullscreen
              title="{{ section.settings.description | escape }}"
            ></iframe>
          {%- else -%}
            <iframe
              src="https://player.vimeo.com/video/{{ video_id }}?autoplay=1{{ loop }}"
              class="js-vimeo"
              allow="autoplay; encrypted-media"
              allowfullscreen
              title="{{ section.settings.description | escape }}"
            ></iframe>
          {%- endif -%}
        {%- else -%}
          {{
            section.settings.video
            | video_tag:
              image_size: '1100x',
              autoplay: true,
              loop: section.settings.enable_video_looping,
              controls: true,
              muted: false
          }}
        {%- endif -%}
      </template>
    </deferred-media>


              
            </div>
        </div>
    </div>
</section>




      


  


{% schema %}
{
  "name": "t:sections.video.name",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
         {
            "type": "text",
            "id": "section_id",
            "label": "Section ID",
            "default": "certified-trainers"
        },
    {
      "type": "inline_richtext",
      "id": "heading",
      "default": "t:sections.video.settings.heading.default",
      "label": "t:sections.video.settings.heading.label"
    },

       
        {
            "type": "richtext",
            "id": "short_description",
            "label": "Text"
        },
  
        {
            "type": "text",
            "id": "primary_button_text",
            "label": "Primary Button Text",
            "default": "Get Certified"
        },
        {
            "type": "url",
            "id": "primary_button_link",
            "label": "Primary Button Link"
        },
        {
            "type": "text",
            "id": "secondary_button_text",
            "label": "Secondary Button Text",
            "default": "Schedule a Consult"
        },
        {
            "type": "url",
            "id": "secondary_button_link",
            "label": "Secondary Button Link"
        },

    {
      "type": "checkbox",
      "id": "enable_video_looping",
      "label": "t:sections.video.settings.enable_video_looping.label",
      "default": false
    },
    {
      "type": "header",
      "content": "t:sections.video.settings.header__1.content"
    },
    {
      "type": "video",
      "id": "video",
      "label": "t:sections.video.settings.video.label"
    },
    {
      "type": "header",
      "content": "t:sections.video.settings.header__2.content"
    },
    {
      "type": "paragraph",
      "content": "t:sections.video.settings.paragraph.content"
    },
    {
      "type": "video_url",
      "id": "video_url",
      "accept": ["youtube", "vimeo"],
      "default": "https://www.youtube.com/watch?v=_9VUPq3SxOc",
      "label": "t:sections.video.settings.video_url.label",
      "info": "t:sections.video.settings.video_url.info"
    },
    {
      "type": "image_picker",
      "id": "cover_image",
      "label": "t:sections.video.settings.cover_image.label"
    },
    {
      "type": "text",
      "id": "description",
      "label": "t:sections.video.settings.description.label",
      "info": "t:sections.video.settings.description.info"
    },
    {
      "type": "header",
      "content": "t:sections.video.settings.header__3.content"
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "label": "t:sections.video.settings.full_width.label",
      "default": false
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
      "blocks": [
        {
            "type": "highlight",
            "name": "Highlight",
            "settings": [
                {
                    "type": "text",
                    "id": "highlight_title",
                    "label": "Highlight Title",
                    "default": "Highlight Title Goes Here"
                },
                {
                    "type": "textarea",
                    "id": "highlight_description",
                    "label": "Highlight Description",
                    "default": "Short description goes here."
                }
            ]
        }
    ],
  "presets": [
    {
      "name": "t:sections.video.presets.name"
    }
  ]
}
{% endschema %}

      <style>
        .video-section{
          width:90%;
          margin:0 auto;
          position:relative;
    
        }
.video-section__media{
  border-radius:20px !important;
  overflow:hidden;
  z-index:9999;
}
          .video--bg{
            position:relative;
          }
        .video--bg:after{
  content:'';
  background: var(--grey-bg, #F7F8FA);
  height:150px;
  width:100%;
  position:absolute;
  top:0;
          z-index:0;
}
</style>

      
<style>
.is--heading-white h2{
  color: #FFF;
} 


.section--text-video {
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: #fff;
        padding: 90px 0;
    }
.text-video--container{

}
  @media only screen and (min-width: 981px) {
  .text-video--content{
  grid-template-columns:1fr 1fr;
}
    .text-video--content{
  display:grid;
      align-items:center;
}
.text-video--column-left{
 width:90%;
  max-width: 530px;
}
  }
  @media only screen and (max-width: 980px) {

    .text-video--content{
  display:flex;
      flex-wrap:wrap;
      flex-direction: column-reverse;
      gap:30px;
}


    
    
    
.text-video--column-left{
 width:100%;
  max-width: 100%;
}

  }


  



.text-video--column-right{
 width:100%;
}


    .video-text-content {
        display: flex;
        width: 100%;
    }
    .text-content {
        color: white;
        flex: 1;
        margin-right: 20px;
    }
  
    .video-wrapper {
        position: relative;
        padding-bottom: 56.25%; /* 16:9 */
        height: 0;
      border-radius:20px;
      overflow:hidden;
    }
    .video-wrapper iframe {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }
.text-video--description{
  margin-bottom:30px;
}

  .text-video--description ul{
        list-style: none !important;
    padding: 0;
  }

    .text-video--description ul li{

    line-height: 1.5;
    margin-bottom: 10px;
    position: relative;
    padding-left: 30px;
      color: #141414;
    font-family: var(--font-body-family);
font-size: 16px;
font-style: normal;
font-weight: 500;
line-height: 150%; /* 24px */
}

.text-video--description ul li:before {
    content: "" !important;
    position: absolute;
    left: 0;
    background-size: 100%;
    background-fit: contain;
    width: 24px;
    height: 24px;
    background-position: center;
    margin-top: -2px !important;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none'%3E%3Cpath d='M12 2.25C10.0716 2.25 8.18657 2.82183 6.58319 3.89317C4.97982 4.96451 3.73013 6.48726 2.99218 8.26884C2.25422 10.0504 2.06114 12.0108 2.43735 13.9021C2.81355 15.7934 3.74215 17.5307 5.10571 18.8943C6.46928 20.2579 8.20656 21.1865 10.0979 21.5627C11.9892 21.9389 13.9496 21.7458 15.7312 21.0078C17.5127 20.2699 19.0355 19.0202 20.1068 17.4168C21.1782 15.8134 21.75 13.9284 21.75 12C21.7473 9.41498 20.7192 6.93661 18.8913 5.10872C17.0634 3.28084 14.585 2.25273 12 2.25ZM16.2806 10.2806L11.0306 15.5306C10.961 15.6004 10.8783 15.6557 10.7872 15.6934C10.6962 15.7312 10.5986 15.7506 10.5 15.7506C10.4014 15.7506 10.3038 15.7312 10.2128 15.6934C10.1218 15.6557 10.039 15.6004 9.96938 15.5306L7.71938 13.2806C7.57865 13.1399 7.49959 12.949 7.49959 12.75C7.49959 12.551 7.57865 12.3601 7.71938 12.2194C7.86011 12.0786 8.05098 11.9996 8.25 11.9996C8.44903 11.9996 8.6399 12.0786 8.78063 12.2194L10.5 13.9397L15.2194 9.21937C15.2891 9.14969 15.3718 9.09442 15.4628 9.0567C15.5539 9.01899 15.6515 8.99958 15.75 8.99958C15.8486 8.99958 15.9461 9.01899 16.0372 9.0567C16.1282 9.09442 16.2109 9.14969 16.2806 9.21937C16.3503 9.28906 16.4056 9.37178 16.4433 9.46283C16.481 9.55387 16.5004 9.65145 16.5004 9.75C16.5004 9.84855 16.481 9.94613 16.4433 10.0372C16.4056 10.1282 16.3503 10.2109 16.2806 10.2806Z' fill='%23141414'/%3E%3C/svg%3E");
}

  
.section--text-video h2{
color: #141414;
    font-family: var(--font-heading-family);
font-size: 42px;
font-style: normal;
font-weight: 800;
line-height: 112%; /* 47.04px */
text-transform: uppercase;
  margin-bottom:7px;
  margin-top:0;
}

.section--text-video p{
color: #141414;
    font-family: var(--font-body-family);
font-size: 16px;
font-style: normal;
font-weight: 400;
line-height: 150%; /* 24px */
}



</style>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const highlights = document.querySelectorAll('.text-video--highlight');

  if (highlights.length > 0) {
    const firstHighlight = highlights[0];
    firstHighlight.classList.add('active');
    const content = firstHighlight.querySelector('p');
    content.style.maxHeight = content.scrollHeight + 'px';
  }

  highlights.forEach(highlight => {
    highlight.addEventListener('click', () => {
      highlights.forEach(h => {
        h.classList.remove('active');
        h.querySelector('p').style.maxHeight = '0';
      });

      highlight.classList.add('active');
      const content = highlight.querySelector('p');
      content.style.maxHeight = content.scrollHeight + 'px';
    });
  });
});

</script>
